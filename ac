if not game:IsLoaded() then
    game.Loaded:Wait()
end

local LocalPlayer = game:GetService("Players").LocalPlayer

local function clientWSP()
    local mt = getrawmetatable(game)
    setreadonly(mt, false)
    oldindex = mt.__index
    mt.__index = newcclosure(function(t, k)
        if tostring(t) == "Humanoid" and tostring(k) == "WalkSpeed" then
            return 16
        end
        return oldindex(t, k)
    end)
end

local function hookGC()
    hookfunction(gcinfo, function(...)
        return math.random(30, 35)
    end)
end

local function guiBypass()
    for i, v in pairs(getconnections(game.DescendantAdded)) do
        v:Disable()
    end
    for i, v in pairs(getconnections(LocalPlayer.PlayerGui.ChildAdded)) do
        v:Disable()
    end
end

local function btoolsBypass()
    for i, v in pairs(getconnections(LocalPlayer.Backpack.ChildAdded)) do
        v:Disable()
    end
end

local function InstantFlyBP()
    for i, v in pairs(getconnections(LocalPlayer.ChildAdded)) do
        v:Disable()
    end
end

local function bypassMemCheck()
    local gamemt = getrawmetatable(game)
    setreadonly(gamemt, false)
    local nc = gamemt.__namecall
    gamemt.__namecall = newcclosure(function(...)
        if (getnamecallmethod() == 'GetTotalMemoryUsageMb') or (getnamecallmethod() == 'GetTotalMemoryUsageMbForTag("LuaHeap")') then
            return math.random(200, 205)
        end
        return nc(...)
    end)
end

local function humBypass()
    for i, v in pairs(getconnections()) do
        v:Disable()
    end
end

local DTC
local Killed
for Index, Value in next, getgc(true) do 
    if type(Value) == "table" then 
        local Detected = rawget(Value, "Detected") 
        local Kill = rawget(Value, "Kill") 

        if type(Detected) == "function" and not DTC then 
            DTC = Detected 
            local Old; Old = hookfunction(Detected, function(...) 
                return true
            end)
        end

        if rawget(Value, "Variables") and rawget(Value, "Process") and typeof(Kill) == "function" then 
            Killed = Kill 
            local Old; Old = hookfunction(Kill, function(...) 
            end)
        end 
    end
end

local Old; Old = hookfunction(getrenv().debug.info, newcclosure(function(...) 
    local LevelOrFunc, Info = ... 
    if DTC and LevelOrFunc == DTC then 
        return coroutine.yield(coroutine.running())
    end
    return Old(...)
end))

clientWSP()
hookGC()
guiBypass()
btoolsBypass()
InstantFlyBP()
bypassMemCheck()
humBypass()
